<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Color x:Key="detailMark">#FFA1A9B3</Color>
    <SolidColorBrush x:Key="detailMarkBrush" Color="{StaticResource ResourceKey=detailMark}" />


    <!--Style TextBox-->
    <Style x:Key="textBox" TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" 
                        CornerRadius="0" 
                        BorderBrush="#000" 
                        BorderThickness="1" 
                        Background="#fff">
                        <ScrollViewer x:Name="PART_ContentHost" 
                            Focusable="false" 
                            HorizontalScrollBarVisibility="Hidden" 
                            VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource textBox}" x:Key="textBoxInError" TargetType="{x:Type TextBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBoxVisibility" TargetType="TextBox" BasedOn="{StaticResource textBoxInError}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=selection, Path=SelectedValue.Content}" Value="Turniejowa">
                <DataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger.Setters>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=selection, Path=SelectedValue.Content}" Value="Ruletkowa">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Style Border-->
    <Style x:Key="border" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="4"></Setter>
    </Style>
    
    <!--Style GroupBox-->
    <Style x:Key="groupBox" TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="4"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <!--Style TextBlock-->
    <Style x:Key="textBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Right"></Setter>
    </Style>

    <Style x:Key="textBlockVisibility" TargetType="TextBlock" BasedOn="{StaticResource textBlock}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=selection, Path=SelectedValue.Content}" Value="Turniejowa">
                <DataTrigger.Setters>
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger.Setters>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=selection, Path=SelectedValue.Content}" Value="Ruletkowa">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="textBlockText" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Justify"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="Margin" Value="0,4,0,4"></Setter>
    </Style>

    <!--Style Grid-->
    <Style x:Key="grid" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="10"></Setter>
    </Style>

    <!--Style ComboBox-->
    <Style x:Key="comboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    </Style>
    
    <!--Style Button-->
    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#000"/>
        <Setter Property="Margin" Value="0,20,0,20"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="220" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderThickness="1"
                            CornerRadius="20"
                            Padding="5"
                            BorderBrush="Gray">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFF1F1F1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>