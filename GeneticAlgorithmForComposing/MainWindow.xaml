<Window x:Class="GeneticAlgorithmForComposing.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GeneticAlgorithmForComposing"
        mc:Ignorable="d"
        Title="MusicGen" Height="450" Width="800">


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <GroupBox Style="{StaticResource groupBox}" Header="MUZYKA" Grid.Column="0" Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>


                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="0">
                    <TextBlock Style="{StaticResource textBlock}" Text="Skala:"/>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="0">
                    <ComboBox x:Name="scale" Style="{StaticResource comboBox}" ItemsSource="{Binding scaleValues}" IsSynchronizedWithCurrentItem="True" SelectedIndex="0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Key}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Border>
                
                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="1">
                    <TextBlock Style="{StaticResource textBlock}" Text="Gama:"/>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="1">
                    <ComboBox x:Name="scaleValue" Style="{StaticResource comboBox}" ItemsSource="{Binding SelectedItem.Value, ElementName=scale}" IsSynchronizedWithCurrentItem="True" SelectedValuePath="Content" SelectedIndex="0"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="2">
                    <TextBlock Style="{StaticResource textBlock}" Text="Liczba taktów:"/>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="2">
                    <TextBox x:Name="measures" Style="{StaticResource textBoxInError}">
                        <TextBox.Text>
                            <Binding Path="MeasureValue" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:MeasureValidationRule MinValue="1" MaxValue="8"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>
            </Grid>
        </GroupBox>

        <GroupBox Style="{StaticResource groupBox}" Header="ALGORYTM GENETYCZNY" Grid.Column="1" Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="0">
                    <TextBlock Style="{StaticResource textBlock}" Text="Rozmiar populacji:"/>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="0">
                    <TextBox x:Name="populationSize" Style="{StaticResource textBoxInError}">
                        <TextBox.Text>
                            <Binding Path="PopulationSize" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PopulationValidationRule MinValue="4" MaxValue="50"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="1">
                    <TextBlock Style="{StaticResource textBlock}" Text="Liczba generacji:"/>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="1">
                    <TextBox x:Name="generations" Style="{StaticResource textBoxInError}">
                        <TextBox.Text>
                            <Binding Path="GenerationValue" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:PopulationValidationRule MinValue="1" MaxValue="1000000"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="2">
                    <TextBlock Style="{StaticResource textBlock}">
                        Prawdopodobieństwo<LineBreak/>
                        krzyżowania:
                    </TextBlock>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="2">
                    <TextBox x:Name="probCrossover" Style="{StaticResource textBoxInError}">
                        <TextBox.Text>
                            <Binding Path="CrossoverProbability" StringFormat="{}{0:#,##}}" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:CrossoverValidationRule MinValue="0" MaxValue="1"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="3">
                    <TextBlock Style="{StaticResource textBlock}">
                        Prawdopodobieństwo<LineBreak/>
                        mutacji:
                    </TextBlock>
                </Border>
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="3">
                    <TextBox x:Name="probMutation" Style="{StaticResource textBoxInError}">
                        <TextBox.Text>
                            <Binding Path="MutationProbability" StringFormat="{}{0:#,##}}" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:CrossoverValidationRule MinValue="0" MaxValue="1"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>

                
                <Border Style="{StaticResource border}" Grid.Column="2" Grid.Row="0">
                    <TextBlock Style="{StaticResource textBlock}" Text="Rodzaj selekcji:"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="3" Grid.Row="0">
                    <ComboBox x:Name="selection" Style="{StaticResource comboBox}" SelectedIndex="0">
                        <ComboBoxItem>Turniejowa</ComboBoxItem>
                        <ComboBoxItem>Ruletkowa</ComboBoxItem>
                    </ComboBox>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="2" Grid.Row="1">
                    <TextBlock Style="{StaticResource textBlockVisibility}" Text="Rozmiar turnieju:"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="3" Grid.Row="1">
                    <TextBox x:Name="tournament" Style="{StaticResource textBoxVisibility}" >
                        <TextBox.Text>
                            <Binding Path="TournamentValue" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <local:TournamentValidationRule MinValue="2" MaxValue="40"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="2" Grid.Row="2">
                    <TextBlock Style="{StaticResource textBlock}" Text="Rodzaj mutacji:"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="3" Grid.Row="2">
                    <ComboBox x:Name="mutation" Style="{StaticResource comboBox}" SelectedIndex="0">
                        <ComboBoxItem>Nuty</ComboBoxItem>
                        <ComboBoxItem>Oktawy</ComboBoxItem>
                    </ComboBox>
                </Border>

            </Grid>
        </GroupBox>

        <Border Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1">
            <Grid Style="{StaticResource grid}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Border Style="{StaticResource border}" Grid.Column="0" Grid.Row="0">
                    <Button x:Name="compose" Content="Komponuj" Click="Compose">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=measures, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=populationSize, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=generations, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=probCrossover, Path=(Validation.HasError)}" Value="false" />
                                            <Condition Binding="{Binding ElementName=probMutation, Path=(Validation.HasError)}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="true" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
                
                <Border Style="{StaticResource border}" Grid.Column="1" Grid.Row="0">
                    <Button x:Name="play" Click="PlayButton" Content="Graj"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1">
                    <TextBlock x:Name="show" TextWrapping="Wrap"/>
                </Border>

                <Border Style="{StaticResource border}" Grid.Column="3" Grid.Row="2">
                    <Button x:Name="saveAsMIDI" Content="Zapisz do pliku MIDI" HorizontalAlignment="Right"/>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
